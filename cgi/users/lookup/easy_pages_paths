#!/usr/bin/perl

=head1 NAME

easy_pages_paths 

=head1 DESCRIPTION

Provide list of existing paths to aid with multiple language support
Will provide all available paths, but sort so the one which matches best is first

=cut

use EPrints;

use strict;

my $session = EPrints::Session->new();

my $provided_text = $session->param("q") || "";

my $database = $session->get_database;
my $dataset  = $session->dataset("page");

my @paths;

$dataset->search->map(
    sub {
        my ( undef, undef, $page ) = @_;
        my $path = $page->get_value("path");

        if ( $path ne "" ) {

            push @paths, $path;
        }

    }
);

# https://stackoverflow.com/a/7829
my %paths_hash   = map { $_, 1 } @paths;
my @unique_paths = keys %paths_hash;

# sort the paths lists so text that matches the beginning best is
my $sort_paths_list = sub {
    my $a_matches = rindex $a, $provided_text, 0;
    my $b_matches = rindex $b, $provided_text, 0;

    # a actually matches
    return -1 if $a_matches > $b_matches;
    return 0  if $a_matches == $b_matches;
    return 1;
};

my @sorted_paths = sort $sort_paths_list @unique_paths;

my @rows;
foreach my $path (@sorted_paths) {

    my $row = {};
    push @rows, $row;

    my $frag = $session->make_doc_fragment;

    $frag->appendChild( $session->make_text($path) );

    $row->{xhtml}  = $frag;
    $row->{values} = [ "for:value:component:_path" => $path, ];
}

my $ul = EPrints::Extras::render_lookup_list( $session, \@rows );

$session->send_http_header( content_type => "text/xml; charset=UTF-8" );

binmode( STDOUT, ":utf8" );
print <<END;
<?xml version="1.0" encoding="UTF-8" ?>

END
print EPrints::XML::to_string( $ul, "utf-8", 1 );

EPrints::XML::dispose($ul);

$session->terminate;
